[{"categories":["Life"],"contents":"In October of 2021, I decided to switch from a WordPress-based blog to a Hugo-based site. I mean, how can I not?!\nI made a backup of my site. Set up my new site, and decided that it was a good time to review and update my site\u0026rsquo;s look and feel, and content.\nBut first, I had to prepare for the Microsoft 365 Conference in December, then the one in April.\nOf course, my WordPress subscription expired while I was in Vegas, and my old content wasn\u0026rsquo;t moved. \u0026ldquo;I\u0026rsquo;ll get to it when I get home\u0026rdquo;, I foolishly told myself.\n\u0026ldquo;I\u0026rsquo;ll get to it when I get home\u0026rdquo;\n\u0026ndash; A foolish me\nBut, shortly after I got home, I heard the good news that I got the new job of Community Program Manager for Power Pages (which was not yet announced).\nBetween then and my official start date in my new role, I\u0026rsquo;d have to start planning from my old role as a Senior Cloud Solution Architect; I\u0026rsquo;d also be helping (albeit in a non-official capacity) prepare for the launch of the new Microsoft Power Pages Community.\nOh, and somewhere during that whole time I was busy helping with the creation (and the migration) of the Microsoft 365 Platform Community Blog, adding development containers to the [SPFx Web Parts repository], and working on some new Sharing is Caring sessions.\nBut things are finally getting back to normal \u0026ndash; a little.\nTwo weeks ago was my first day in my new role. I had to travel to Seattle (for the first time in over 10 years) so I could meet my new team.\nCame back last week. Tested positive for COVID. Rested \u0026ndash; probably more than I have in many, many years \u0026ndash; and now I\u0026rsquo;m fixing my blog while fighting a fever (the pink elephants are telling me I\u0026rsquo;m doing a fine job, by the way).\nI\u0026rsquo;ll do my best to migrate all my old content \u0026ndash; starting with the most frequently-visited content first \u0026ndash; and keep the original URLs the same.\nBut until then, thank you for being patient.\nAlso, thank you for reaching out to tell me that my blog is down. I knew that people visited my blog (because I saw the traffic stats), but I never quite realized that those \u0026ldquo;visitors\u0026rdquo; on my site stats were from real people in the community.\nAnd I certainly never expected to receive so many messages from people telling me that they always rely on my site for so many things.\nFor something that started as a place to leave notes for myself, I am quite flattered that others find my ramblings useful.\nThank you! As I get back on my feet, so will the content on my blog!\nPhoto Credits Photo by Pierre Bamin on Unsplash\n","permalink":"https://hugoabernier.github.io/posts/migrating/","tags":null,"title":"Wait... where did all the content go?!"},{"categories":["Productivity"],"contents":"Introduction If you\u0026rsquo;ve ever tried to give a PowerPoint presentation and switch to your desktop to do a demo, you may have noticed that PowerPoint tends to fight with you to stay in slide show mode.\nSlide show mode shows your presentation in full screen, but it hides your cursor and captures your keyboard and mouse. If you want to get out of it to do your demo, you have to hit Esc, and Alt-Tab to your demo. Then you have to go back to your presentation, restart the slide show (and often restart at the first slide by mistake).\nUgh!\nYou usually end up fighting with Alt-Tab (and potentially reveal to your audience what other applications you\u0026rsquo;ve got running and/or show your private chats to the world \u0026ndash; like I\u0026rsquo;ve done), or end up showing your presentation in PowerPoint without using the slide show (I\u0026rsquo;m looking at you, Microsoft employees!)\nIn today\u0026rsquo;s post, I\u0026rsquo;ll explain how you can use the slide show mode and make it easy to switch back and forth between your demo and your presentation.\nAs a bonus, I\u0026rsquo;ll show you how you can also keep Teams open and monitor the chat window as you present.\nUsing Presenter Mode in PowerPoint First things first: use the slide show mode!!!. When you present to your audience, you\u0026rsquo;re competing for their attention and trying to get them to focus on what you\u0026rsquo;re showing. They\u0026rsquo;re already fighting to stay awake and will probably look at everything on your slides. If you\u0026rsquo;re just showing your slides in PowerPoint without the slide show mode, you\u0026rsquo;re making harder on your audience to focus and stay engaged. They see all the slides in your deck (\u0026ldquo;Oh my god, he\u0026rsquo;s got 37 slides! We\u0026rsquo;ll never get out of here!\u0026rdquo;), all the ribbons and buttons (\u0026ldquo;Ooh, I wander what the Design Ideas button does?!\u0026rdquo;), and you make the content on your slides smaller.\n(Just so we\u0026rsquo;re clear: this is not cool!)\nDon\u0026rsquo;t you want to be respectful to your audience and save them from boredom? They certainly want you to!\nTo launch your PowerPoint presentation in slide show mode, you just need to hit F5 from anywhere in your presentation. It\u0026rsquo;ll start your slides full-screen (unless you use a custom slide show, but that\u0026rsquo;s another story).\nIf you want to start from the current slide you\u0026rsquo;re editing, you can simply hit Shift-F5.\nTo get out of the slide show mode, hit Esc.\nSo far, this is probably obvious to you (except, maybe, if you\u0026rsquo;re a Microsoft employee, who apparently forget about the F5 key as soon as they join Microsoft üòä).\nThe hard part comes next: how to you easily switch between your slide show mode to your demo (without getting out of your slide show)?\nUsing Desktops As it turns out, the solution is built-in into Windows 10: just use desktops.\nTo get to desktops, just hit the Task View from your task bar.\nYou should begin with only one desktop. To create a new one, select + New desktop at the top of the Task View.\nOnce you have created your new desktop, your task view will allow you to switch back and forth between desktops.\nTo switch between desktops quickly, just use Ctrl-Win-‚Üí and Ctrl-Win-‚Üê to go to your next or previous desktops.\nNow that you know how to switch between desktops, let\u0026rsquo;s set them up for your presentation.\nSetting up the desktops I like to set up my desktops as follows:\nThe Default desktop is where I\u0026rsquo;ll run PowerPoint from. The Demo desktop is where the code that I\u0026rsquo;ll demo will be running from. NOTE: You can rename the desktops from the task view by clicking on their names and typing a new name\nDuring my presentation, I\u0026rsquo;ll launch PowerPoint is slide show mode on the default desktop; when I\u0026rsquo;m ready to show the demo, I\u0026rsquo;ll switch to my demo desktop without leaving the slide show mode!\nFor example, in this screen capture below, I go from my PowerPoint slide (which says \u0026ldquo;Demo\u0026rdquo;) to the web page containing the web parts I am demoing.\nSometimes I\u0026rsquo;ll add another desktop to pre-load Visual Studio Code, or one for each of my clients where I place all my windows related to a client so I don\u0026rsquo;t have to close all my apps before I start presenting.\nAll you need to do is to send your apps from the task view to another deskop.\nHere\u0026rsquo;s how\nFrom the Windows task bar, start the task view From the task view, right-click on an app you want to move between desktop Select Move to\u0026hellip; and select the name of the desktop where you want the app to appear. In my case, I\u0026rsquo;ll select Demo. That\u0026rsquo;s it!\nKeeping Teams visible on all desktops There is one disadvantage to using desktops: if you use Teams to connect to a meeting and watch the meeting video and/or chat window, and Teams is on your default desktop, it disappears when you switch to another desktop.\nThankfully, David Warner II \u0026ndash; who is the master of presentation tips \u0026ndash; there is a way you can make Teams (or any other apps) appear on all desktops, regardless of which one is currently displayed.\nTo do so, follow these steps:\nForm the task view, right-click on Teams (or the app you want to appear on all desktops) From the context menu, select Show this window on all desktops (or, if you want the window and all the pop-up chat windows and other dialog, select Show windows from this app on all desktops) When you switch desktops, Teams will remain visible!\nConclusion I hope that you\u0026rsquo;ll find slide show mode and desktops useful when doing your presentations.\nDo you use desktops in any other creative ways? Let us know in the comments.\nPhoto Credit Photo by Jeffrey Hamilton on Unsplash\n","permalink":"https://hugoabernier.github.io/posts/from-powerpoint-to-demos-easily-with-desktops/","tags":null,"title":"From PowerPoint to Demos Easily With Desktops"},{"categories":["Productivity"],"contents":"Find out how you create create shortcuts that will launch your Edge browser with a different profile. Bonus: find out how to configure your Stream Deck buttons to launch Edge, Teams, and conference calls using different browsers.\nIntroduction Ugh. I was useless today: my internet was down for most of the day and I was powerless.\nI tried to make myself useful by writing blog posts that I have been meaning to write for a long time (it has been a long time, hasn\u0026rsquo;t it?!).\nIf you\u0026rsquo;re like me, you probably have a bazillion accounts on various Microsoft 365 tenants. I have one for each of my clients, sometimes two (one is a regular user, one is an admin user), plus one for each of my developer tenants, my MVP tenant, and one for when I collaborate with the nicest, most hard-working MVP that I know.\nI have already shared how to use Edge profiles to log on to different tenants and even how to add custom images for each profile, but today I\u0026rsquo;ll show you the next step: creating shortcuts to launch an instance of the Edge browser as a different profile.\nIf you use an Elgato Streamdeck, I\u0026rsquo;ll also show you how you can create keys to launch your browser as a different profile from your Streamdeck.\nCreating a shortcut to launch Edge as a different profile For these instructions, I\u0026rsquo;ll assume that you already have more than one profile on Edge. If you don\u0026rsquo;t, please follow my instructions and come back when you\u0026rsquo;re done. I\u0026rsquo;ll be right here.\nI recently moved to a new computer and I haven\u0026rsquo;t migrated all my accounts yet, but I\u0026rsquo;ll the profiles that I already have set up as an example.\nLet\u0026rsquo;s say that I want to create a shortcut to launch the browser to my Warner.Digital tenant. I\u0026rsquo;d use the following steps:\nBefore we start, we need to know the location of the shortcut we want to create. The shortcut we need consists of three components: [path to your Edge executable] [profile flag] [url]. I usually open a file in Notepad to write down my shortcut path. The first part is easy: you want to find where the Edge executable is installed on your computer. It is most likely \u0026quot;c:\\program files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot;, but we\u0026rsquo;ll confirm it in the next step. The second part of your shortcut is the profile flag. It usually consists of the following: --profile-directory=\u0026quot;Your profile directory\u0026quot;. To find your profile directory, follow these steps: Launch Edge under the profile you wish to use. I\u0026rsquo;m going to use my Warner Digital one for this example While running as the Edge profile you want, in the address bar, type: edge://version and hit Enter In the page that appears, you should find the path to your Edge installation under Executable path, and the path to your profile, under Profile path. NOTE: You may be tempted to use the value from Command-line, but it always points to the wrong profile path \u0026ndash; at least in the version of Edge that I\u0026rsquo;m currently using.\nYou only need the last part after the last \\ of your Profile path. For example, my profile path is D:\\Users\\hugoa\\AppData\\Local\\Microsoft\\Edge\\User Data\\Profile 4, so I\u0026rsquo;ll use Profile 4 We have what we need for the first two parts of your shortcut! My shortcut to launch my Warner Digital profile would be \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=\u0026quot;Profile 4\u0026quot;. Note that if your profile path has any spaces in it, you\u0026rsquo;ll want to use double quotes (\u0026quot;), like I did in mine. If you just want your shortcut to open to a blank tab (or whatever is your default start page for that profile), you don\u0026rsquo;t need to add anything else. However, if you want to launch a particular URL, just add a space, followed by whatever URL you want. For example, to launch SharePoint in the Warner Digital tenant, I\u0026rsquo;d use: \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=\u0026quot;Profile 4\u0026quot; https://warnerdidigal.sharepoint.com Once you have your shortcut path ready, you can use whatever approach you want to create the shortcut. If you want to create shortcuts for your Elgato Streamdeck, just use the path as is (see below). To create a new Windows shortcut, use these steps: In Windows, go to the location where you want your shortcut to be created and select New \u0026gt; Shortcut In the Create Shortcut dialog, you\u0026rsquo;ll be prompted to enter the location of the new item. , just past your new shortcut path and select Next Give your new shortcut a name, for example I used Warner Digital and select Finish. That\u0026rsquo;s all you need! You should be able to add the shortcut to your Start Menu, your task bar, or anywhere on your desktop.\nCreating Shortcuts to open Teams (web-based) using different profiles This is so easy, it probably doesn\u0026rsquo;t warrant a section, but I\u0026rsquo;ll say it anyway: you just need to need to make the URL portion of your shortcut https://teams.microsoft.com.\nThat\u0026rsquo;s it.\nSo, to open Teams in my Warner Digital profile, my shortcut would be: \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=\u0026quot;Profile 4\u0026quot; https://teans.microsoft.com\nCreating a shortcut to call/chat with someone using Teams on a specific profile Also pretty easy, but I thought I\u0026rsquo;d share. Just make the URL portion of the shortcut https://teams.microsoft.com/l/chat/0/0?users=, followed by the email address of the user (or users) you want to chat with.\nFor example, to chat with David Warner, I\u0026rsquo;d use: \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=\u0026quot;Profile 4\u0026quot; https://teams.microsoft.com/l/chat/0/0?users=david.warner@fakeemail.com\nTo chat with David Warner and Luise Freese, I\u0026rsquo;d use: \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=\u0026quot;Profile 4\u0026quot; https://teams.microsoft.com/l/chat/0/0?users=david.warner@fakeemail.com,luise.freese@fakeemail.com\nLaunching a regular meeting using a profile Just like the previous tips, this one is pretty straight forward. Copy the URL from the join link of a Teams meeting, and add it as the URL portion of your shortcut.\nFor example, if I wanted to join the bi-weekly SPFx special interest group community call using my regular profile, I\u0026rsquo;d use: \u0026quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\u0026quot; --profile-directory=Default https://aka.ms/spdev-spfx-call-join\nBONUS SECTION: Putting it all together on an Elgato Streamdeck I have a 15-key Elgato Streamdeck and I really enjoy it. I should probably get myself the XL Stream Deck one of these days\u0026hellip;\nOne thing that many people don\u0026rsquo;t know (I myself learned it from David Warner, who is the king of gadgets) is that you can create folder buttons on your Streamdeck. Your folder can contain a different set of buttons \u0026ndash; or even more folders!\nTo create a folder in Stream deck:\nLaunch your Stream Deck application In the right pane, search for folder and select Create folder from the Stream Deck group Drag the Create folder icon to a blank button on your Stream Deck. After you drop the Create folder icon on a button, it will create a new folder for you. While the new button is selected, you can edit the folder\u0026rsquo;s title or icon, if you wish. If you click on the newly created folder, it will open into the new folder where you can add new buttons or more folders. You can also click on the back arrow icon (on the top left button in the folder) to go back one level. Theoretically, you could create an infinite number of folders with buttons\u0026hellip; so the possibilities are endless.\nHere\u0026rsquo;s how I use my Streamdeck. I\u0026rsquo;m sure there are plenty of other ways to set it up, but this is how I like to set mine up:\nAt the root, I have folder for Edge profiles, one for Teams instances, and one for regular Meetings\nIn my Edge folder, I have all my most frequently used profile. The ones I use for my clients and my personal tenants.\nIn my Teams folder, I have all my frequent Teams clients that I use.\nAnd, finally, in my Meetings folder, I have all the join links for all my regular meetings, as well as some frequent chat buttons.\nOf course, I make sure to select fun icons so I can easily identify which button is for what meeting \u0026ndash; complete with a warrior horse animated GIF for the General Microsoft 365 Special Interest Group bi-weekly call, because: Chris Kent.\nYou may wonder: why wouldn\u0026rsquo;t I just create a folder for each client/team I work with and put my Edge, Teams, and meetings buttons in each client folder? Sometimes I work with more clients than I have buttons available, and I still want to have enough room to have my ZoomIt, PowerPoint presentation, light control, and sound control buttons :-(\nConclusion I hope that this will help you making the most of shortcuts with Edge profile.\nDo you use Edge profile in creative ways? Let me know in the comments.\n","permalink":"https://hugoabernier.github.io/posts/launching-edge-with-different-profiles-using-shortcuts/","tags":["streamdeck","microsoftedge","windows"],"title":"Launching Edge with different profiles using shortcuts"},{"categories":["Public speaking"],"contents":"Introduction I‚Äôm not a great presenter.\nI have been working in IT for over thirty years, during which time I have done many technical demos‚Ä¶ and failed many of them.\nHowever, I‚Äôm always trying to improve myself. Since I started presenting regularly on the PnP community calls and the demos are posted on YouTube, I reached out to Andrew Benson (who does an amazing job editing and publishing the videos) for his help with a demo checklist that I can use to improve the quality and consistency of my demos.\nI hope that this checklist will help someone else preparing for their technical demos.\nLet‚Äôs get one thing straight, though: I‚Äôm not sharing this list because I think I‚Äôm an awesome presenter (I‚Äôm not), but because I hope that it‚Äôll help others who ‚Äî like me ‚Äî are on a continued journey to improve their presentation skills.\nIf you have other tips you‚Äôd like to share, feel free to use the comments section.\nGetting your environment ready Headset PC fans are noisy. When you use a microphone, the fan sound is often picked up by the microphone.\nUnless you‚Äôre a professional broadcaster with a fancy microphone, you should use a headset.\nHeadsets are great because they keep your microphone a constant distance from your mouth.\nIf you use a wireless headset, make sure it is charged before your presentation. Alternatively, use a wired headset so you don‚Äôt have to worry about batteries.\n(I use a Jabra Evolve 75, which seems to be adequate for me)\nMicrophones Internal In a pinch, you can use your built-in microphone on your computer, but keep in mind that you‚Äôll sound far away, and your microphone will pick up every sound in the room. When I review old demos I did with my Surface Studio 2‚Äôs built-in microphone, I can hear when I move my mouse and my keyboard clacking as I type on it.\nExternal According to Andrew, you should use XLR ‚Äì vocal/speech microphones. Avoid using USB mics because of the lousy sound quality.\nIf you‚Äôre going to buy a microphone, here‚Äôs Andrew‚Äôs recommendations from low cost to higher end:\nShure SM57/58 ($100) Shure SM7B / ElectroVoice RE20 ($400-$500) AT4050 / Neumann TLM 102 ($600-$800) Neumann U87 ($3,000+) Speakers If you aren‚Äôt using a headset, make sure that your speakers aren‚Äôt too loud so that you don‚Äôt generate echo when you speak.\nVideo camera Internal Your built-in PC camera is probably adequate ‚Äî just make sure that you elevate your PC so that the audience can get a straight view of you (instead of a view of inside your nostrils).\nExternal 720p or 1080p HD is plenty ‚Äî no need for 4k. Teams does not conference or stream 4K, so your picture quality will be lowered to 1080p anyway.\nAndrew recommends a 1080p webcam with a built-in tripod so you can position the camera on a stable surface rather than straddling on your unstable laptop screen.\nBackground While they are cool, avoid using background effects. You should strive to appear as real and natural as if you were in the same room. With backgrounds, you often appear like a cut-out. With that being said, my office is also used for storage, so I always have a background on.\nMost importantly, it makes it a lot harder to subtly cut and splice videos when you use background effects.\nScreen resolution If you‚Äôre going to be demoing something, your screen resolution is pretty important.\nLet‚Äôs put it plainly: it does not matter whether you use 720p or 1080p; the key is to use a 16:9 ratio.\nHere is a list of resolutions that will provide a 16:9 ratio:\nResolution Examples Dimensions Wide XGA (WXGA-H) Minimum, 720p HDTV 1280√ó720 Full HD (FHD) 1080 HDTV (1080i, 1080p) 1920√ó1080 Wide Quad HD WQHD Dell UltraSharp U2711, Dell XPS One 27, Apple iMac 2560√ó1440 Wide QXGA+ (WQXGA+) HP Envy TouchSmart 14, Fujitsu Lifebook UH90/L, Lenovo Yoga 2 Pro 3200√ó1800 4K Ultra HD 1 (4K UHD-1) 2160p, 4000-lines UHDTV (4K UHD) 3840√ó2160 8K Ultra HD 2 (8K UHD-2) 4320p, 8000-lines UHDTV (8K UHD) 7680√ó4320 Please note that if you use a higher resolution, you need to make sure that all font sizes are big enough for everyone in the audience to be able to read your text.\nWhen using a browser, make sure that your app resolution is at 100%.\nWhen presenting in PowerPoint, make sure to use the Presenter mode, which will render your presentation at 100% resolution and use your full screen.\nTo use the presenter mode, hit F5 to start from the first slide, or SHIFT-F5\nTheme Yes, yes, dark theme is cool. But when it comes to presenting ‚Äî especially if you‚Äôre showing code in Visual Studio Code / Visual Studio ‚Äî use a light theme.\nCreating your demo You have a very short period of time to convey your message. If you‚Äôre demoing during one of the PnP community calls, you typically have between 10 to 15 minutes to do your demo.\nCreate your story Try to explain to your audience why they should care about your demo; present the current state, then your \u0026ldquo;improved\u0026rdquo; state so that people can quickly understand what‚Äôs in it for them.\nOnce you have introduced yourself (see below), show a demo as quickly as possible. Or, at least, show a teaser that will keep your audience interested.\nResist the urge to talk for 10 minutes about your code without showing your demo or your audience will get bored and fall asleep.\nMake sure that you‚Äôre able to answer the audience‚Äôs \u0026ldquo;what‚Äôs in it for me?\u0026rdquo;\nCreate your companion deck You don‚Äôt need to create a huge PowerPoint presentation here; just something that provides your name, title, and contact information.\nYou might need a slide to explain your usage scenario or to show the before/after pictures.\nIf you want to, you can include an architecture diagram ‚Äî but it is often unnecessary.\nAvoid using transition and animations. They don‚Äôt show well on Teams and/or YouTube videos.\nPrepare your code walk-through If you‚Äôre going to show code, it‚Äôs a good idea to create screen shots of your code in PowerPoint and highlight the important sections.\nI know, you may think that it is cooler to show code directly in Visual Studio Code/Visual Studio, but it invariably results in blurry code as you scroll around and move your mouse around.\nPlus: it forces you to think ahead of time about what code you want to show.\nCreate your resources list You should wrap up your companion deck with a demo summary and reference slides. It‚Äôs a good idea to provide a link to your source code.\nTake the time to include links to the articles, blog posts, previous demos that you may refer to during your demo.\nCreate your \u0026ldquo;oh shit\u0026rdquo; deck No matter how simple your demo is, you should always prepare for the eventuality that everything will go wrong.\nDo a dry run of your demo and take screen shots throughout so that if the demo gods are not playing nice, you‚Äôll have something to show.\nIf you‚Äôre preparing for a PnP call demo, David Warner II ‚Äî who does a screenshot summary of every PnP call ‚Äî will most likely contact you to ask if you have any slides before you‚Äôre scheduled to present. Make sure to include your screenshot slides.\nCreate the metadata for your demo If you‚Äôre doing a demo for a PnP call, it will be recorded and posted on YouTube. You may want to write a 100-word description for your demo title, description. Make sure to include the tools or technologies you used if that‚Äôs what your demo is about.\nPrepare for the Q\u0026amp;A Be ready! People may ask about compatibility, licensing, availability, why you used this approach instead of another one, etc.\nGet permissions If you‚Äôre demoing work that you did for a customer, you should obtain a written permission from them before you mention them and/or show their solution. Otherwise, make sure to make to sanitize or otherwise make your demo so that nobody gets in trouble.\nGiving your demo Demo day checklist Cue up your demo and load your presentation Create your virtual desktops (see below) Confirm that you are a presenter (the agenda for PnP calls is usually published in advance on social media) Find out which presentation slot is yours ‚Äî but be prepared to present sooner Fifteen minutes before the call:\nTurn off notifications (trust me on this one!); if using Windows 10, consider turning on Focus assist\nSet your phone to mute Sign-in to the Teams call. While you do, make sure to test your audio and video. While on the call, check the participants list to make sure that you‚Äôre a presenter.\nTest your audio/video before everybody signs in When it is your time to demo:\nTake control of your presentation (hit the Share tray icon) Make sure to present your PowerPoint in presentation mode Close the meeting control box (the one in the lower right corner that shows the meeting video) Confirm that you‚Äôre being seen and heard Introduce yourself; don‚Äôt mention the time of the day (remember that your demo will be recorded and available on-demand for months to come) Stick to your script (except for the Q\u0026amp;A portion at the end) Don‚Äôt prompt for questions; They‚Äôre handled through the chat window. If you choose to answer a question from the chat window, make sure to restate the question before giving the answer (the chat window doesn‚Äôt show up on recordings) Relinquish control Mute yourself after your demo Answer questions in the chat window. Demo tips Use ZoomIt When you want people to focus on something on the screen, it‚Äôs always a good idea to zoom in or highlight the screen in some way.\nLuckily, there‚Äôs free tool by Microsoft called ZoomIt which is designed to help during presentations.\nAfter you install ZoomIt, you can use these useful shortcut keys to enable ZoomIt features:\nShortcut key Function Ctrl-1 Begin Zoom-In mode Ctrl-2 Begin drawing (while not zoomed in) ‚Üë Zoom In ‚Üì Zoom Out Left-Click Begin drawing (while zoomed in) R, B, Y, G, O, P Change pen color to red, blue, yellow, green, orange, purple Ctrl-‚Üë Increase pen size Ctrl-‚Üì Decrease pen size E Erase ESC Stop zoom Tab Draw ellipse (while drawing) SHIFT Draw a straight line (while drawing) CTRL Draw a rectangle (while drawing) SHIFT+CTRL Draw a rectangle (while drawing) T Type (while zoomed in) If you want to see cool demos using ZoomIt, take a look at presentations by David Warner II.\nThere are other cool features you can use (like timers, blanking the screen, etc.). I recommend you take visit the ZoomIt site for more information.\nUsing multiple desktop When you‚Äôre in PowerPoint presenter mode, it can be hard to switch to your desktop to show your demo, and switch back. It‚Äôs like PowerPoint doesn‚Äôt want to stop presenting, or it doesn‚Äôt want to back to presenting‚Ä¶\nI like use Windows 10‚Äôs Desktop functionality to create multiple desktops. With multiple desktops in Windows, you can assign which \u0026ldquo;desktop\u0026rdquo; you want the application to appear in. While you‚Äôre showing a desktop, only the applications from that desktop will show up. When you switch to another desktop, it hides the applications from the previous desktop and shows applications from the current desktop only.\nI usually have a Work desktop (so I can work while waiting for the call), a Demo desktop (where I show the application I‚Äôm going to demo), and a Presentation desktop, where I have PowerPoint in presentation mode.\nTo use multiple desktops, follow these steps:\nLaunch PowerPoint and Teams From the taskbar, select Task view \u0026gt; New desktop +. Alternatively, you can use WIN-Ctrl-D In the new desktop, launch the apps you want to use while demoing. Launch your browser and/or Visual Studio Code, for example. Cue your browser to your demo page. When you‚Äôre ready to switch between desktops, use Ctrl-WIN-‚Üí and Ctrl-WIN-‚Üê to go to the next/previous desktop If you need to see all your desktops (to rename or re-organize them), you can use WIN+Tab. The great thing is when you‚Äôre sharing your desktop in Teams, it shows the content your monitor sees ‚Äî regardless of which desktop shows.\nConclusion I hope that this checklist will help you prepare for your demo.\nIf you‚Äôre looking for inspiration, take a look at these demos which follow the format discussed above:\nChris Kent (DMI) https://www.youtube.com/watch?v=v5tGR6Eh_Jo, https://www.youtube.com/watch?v=_-Q_itkE0Uk David Warner (Catapult Systems) \u0026amp; Hugo Bernier https://www.youtube.com/watch?v=D9P6kGECklI Hugo Bernier https://www.youtube.com/watch?v=gWrvC-0HF4A Paolo Pialorsi (PiaSys.com) https://www.youtube.com/watch?v=_8Jkj2NUAEc Niket Jain (Microsoft) https://www.youtube.com/watch?v=oIAJ2_Md8xI Markus M√∂ller (Avanade) https://www.youtube.com/watch?v=h4NXi-p2fEw Wictor Wil√©n (Avanade) https://www.youtube.com/watch?v=zc9S270c-Dg Sudharsan Kesavanarayanan https://www.youtube.com/watch?v=ndHMdfFscsk I hope this helps?\nPhoto credits Image by Rudy and Peter Skitterians from Pixabay\n","permalink":"https://hugoabernier.github.io/posts/my-demo-checklist-for-pnp-calls/","tags":["PnP"],"title":"My Demo Checklist for PnP Calls"},{"categories":["VS Code"],"contents":"Introduction If you‚Äôre an SPFx developer who uses Visual Studio Code, you may have noticed that the JSON files that the Yeoman generator creates contain comments to help you understand how to configure your manifest.\nThe only problem is: JSON files aren‚Äôt supposed to have comments. And Visual Studio Code likes to remind you of that when it sees comments in a JSON file.\nFor example, when you open the manifest for your brand new SPFx web part, you‚Äôll find these nasty error messages:\nAn example of schema validation errors caused by comments\nI‚Äôm one of those people who can‚Äôt stand any validation errors or warnings. I know, I know, I‚Äôm weird. But it drives me insane!!!\nLuckily, Paul Schaeflein has a solution that he Tweeted this morning:\nTired of the squigglies in the SPFx configuration files? Add this to your Workspace settings (.vscodesettings.json):\n\u0026ldquo;files.associations\u0026rdquo;: {\n\u0026ldquo;*.json\u0026rdquo;: \u0026ldquo;jsonc\u0026rdquo;\n}\n‚Äî Paul Schaeflein (@paulschaeflein) August 12, 2020\nIn this super-quick post, I‚Äôll show how to configure your Visual Studio Code to stop showing validation errors for comments in JSON files.\nPaul Schaeflein deserves all the credit for this. I‚Äôm just giving you step-by-step instructions.\nConfiguring JSON files to accept comments From Visual Studio Code, follow these steps:\nFrom the menu, go to File | Preferences | Settings In the User preferences tab, expand the Text Editor section and select Files In the Associations setting, select Add Item In the new row, enter the following values: Under Key enter *.json Under Value enter jsonc Select OK to add your entry That‚Äôs it! Now you should be able to go to your manifest file and enjoy the squiggle-less JSON with comments!\nAhhh, no more schema validation errors!\nWhat unholy magic is this? Few people know that if you save your .JSON file as a .JSONC file, you won‚Äôt get validation errors. That‚Äôs because .JSONC stands for \u0026ldquo;JSON with comments\u0026rdquo;.\nHowever, you can‚Äôt rename your schema files in an SPFx solution to .JSONC because SPFx expects .JSON files ‚Äî not .JSONC.\nPaul‚Äôs \u0026ldquo;hack\u0026rdquo; simply associates .JSON files with the .JSONC schema. That way, Visual Studio Code treats every .JSON file as a .JSONC ‚Äî regardless of the extension.\nThank You Thanks Paul Schaeflein for this tip! You may have saved my sanity!\n","permalink":"https://hugoabernier.github.io/posts/getting-rid-of-json-validation-errors-on-comments/","tags":null,"title":"Getting rid of JSON validation errors on comments"},{"categories":["Productivity"],"contents":"Introduction With Edge Chromium, you can set up multiple profiles with different credentials, history, cookies, extensions, etc.\nIf, like me, you work with multiple Microsoft 365 tenants, this feature can be a real time saver. I‚Äôve already written about how to configure multiple in a previous post, so I won‚Äôt repeat myself here.\nTo keep track of who you‚Äôre currently logged on as, Edge displays a profile picture on the upper-right corner.\nYou can configure a different picture for every profile in your browser, but you‚Äôre limited to two choices:\nThe profile picture associated to your Microsoft 365 tenant (if you‚Äôre signed in with a Microsoft 365 tenant); or One of the cute avatar images that come with Edge\nUnfortunately, there isn‚Äôt a choice for custom profile pictures.\nI was collaborating with David Warner II this evening, solving world problems, when we suddenly got distracted with fixing an issue with one of his profiles.\nIn the process of fixing his browser issues, I discovered a way to change my profile images.\nI searched for this and didn‚Äôt find anything, and I definitely don‚Äôt know if this is a supported feature or not, but I thought I‚Äôd share with you how I did it.\nChanging your profile picture Here‚Äôs how to do it:\nUsing Edge Chromium, switch to the profile for which you wish to set up a custom profile image. Make sure that it already has an image (if not, click on your profile, select Manage profile settings | ‚Ä¶ | Edit | Change Picture ) From the address bar, type edge://version From the About version page that shows up, look for Profile path. Copy the path that‚Äôs displayed next to it (it should be something like C:\\Users\\hugoa\\AppData\\Local\\Microsoft\\Edge SxS\\User Data\\Profile 1) Launch a file explorer and navigate to that path. (I use [Windows]+[R] to launch the Run‚Ä¶ dialog and paste the path). In the list of files that appear, look for one called Edge Profile Picture.png and make a backup copy of it. Find whatever custom image that you‚Äôd like to use, resize it to 424√ó424 pixels, and save it as Edge Profile Picture.png Close your browser and your new profile picture should show up\nConclusion That‚Äôs it! I have now configured all my profiles to use the corporate logo of every tenant I have so that I easily tell which profile is currently in use.\nLet me know if you found a better way to do this.\nI hope this helps?\nPhoto credit Image by Andre Mouton from Pixabay\n","permalink":"https://hugoabernier.github.io/posts/adding-custom-edge-profile-images/","tags":["Microsoft Edge"],"title":"Adding custom Edge profile images"},{"categories":["Microsoft List"],"contents":"Introduction Over the last few years, Microsoft has done an amazing job at modernizing SharePoint.\nIt used to be that the first question my clients would ask me when I would start a new engagement was \u0026ldquo;How can we make SharePoint not look like SharePoint?\u0026rdquo;.\nNow, most engagements start with \u0026ldquo;How can we make our old SharePoint sites look more like the new SharePoint sites?\u0026rdquo;.\nThat‚Äôs a testament to the hard work of folks at Microsoft. They‚Äôve changed how you edit SharePoint pages and sites to make it easier for everyone to quickly design beautiful content.\nBut lists in SharePoint have not changed at the same pace. Sure, they got a slightly updated look and feel (well, some lists, anyway), but they were still not easily approachable for every user.\nWith Microsoft Lists, Microsoft seems to be doing to Lists what the SharePoint team did to pages. They are modernizing them and making them much easier to use for everyone.\nThey‚Äôre still lists behind the scenes, but they‚Äôre no longer relegated to being hidden in a site somewhere. They‚Äôre becoming first-class citizens in Microsoft 365, crossing the boundaries of SharePoint, Groups, and Teams.\nI already covered the lists templates, but in today‚Äôs post, I‚Äôll explain how you can easily build rules to to notify someone, and how rules will continue to evolve to do a lot more.\nNOTE: As per my previous post on Microsoft Lists, much of this is speculation based on Microsoft marketing materials, demos, and videos. I‚Äôm like one of those people who watch trailers for Marvel Movies frame-by-frame to get as many spoilers as possible, but for Microsoft marketing videos :-). Actual functionality may be different once this feature is fully released.\nCreating a rule Here are the steps to create a rule:\nFrom within you list, go to the Automate menu and select + Create a rule\nFrom the Create a rule pane, select the rule trigger you wish to use\nYou‚Äôll notice that ‚Äî at this time ‚Äî the only options are to Notify someone when. The way this panel is done, it looks like they‚Äôll be adding more rules in the future though. Depending on the trigger you select, you‚Äôll get a nice conversational interface with an easy \u0026ldquo;fill-in the blanks\u0026rdquo; sentence that makes it easy to configure your rule. Rules are very simple: they all follow a \u0026ldquo;if/then\u0026rdquo; format. This is when you select A column changes\nThis is when you select A column value changes to something\nA new item is created\nAn item is deleted\nFill the blanks with the values you want\nThe most \u0026ldquo;complicated\u0026rdquo; one seems to be A column value changes to something, which asks you to Choose a column, Choose a condition and a Enter a value. Note that when \u0026ldquo;fill-in-the-blank\u0026rdquo; sections are related, you need to fill the first part before you call fill the next one. For example, you need to Choose a column before you can Choose a condition, and the Choose a condition field needs to be filled before you Enter a value. That‚Äôs presumably to (eventually) give different condition choices when you pick different types of columns, I guess.\nEmail fields allow you to enter multiple values and seem to resolve the email address to people, if available. Also, you can refer to other columns on the list item. For example, if you have a column called Speakers, you can select Speakers instead of entering an email there.\nOnce you‚Äôve filled in the blanks, select Create to create the rule. When the rule is created, it will display the Manage Rules pane with your new rule created.\nEditing a rule From the Manage rules pane (Automate | Manage rules ), select the rule you wish to change. In the Edit rule pane, you get the same fill-in-the-blanks fields that you got when you created the rule, but now they contain the values you selected when you created the rule.\nTo delete the rule, select the Delete rule button at the bottom of the pane.\nOtherwise, select Save to update your rule and return to the Manage rules pane. Note that you can also temporarily disable a rule from within the Manage rules pane and selecting the toggle to turn a rule off.\nWhy put rules under Automate? By the looks of it, the Automate menu will eventually become the place for other cool automation features.\nFor example, if you add a date field in your list, you‚Äôll see a Set a reminder option show up (my list has a Date reported field).\nWhen you have an item selected, the list of choices under Automate seems to change as well:\nConclusion The overall look and feel of rules in Microsoft Lists is a very user-friendly interface that seems to be designed to grow. Every aspect, from how the menu is constructed to how the configuration panels are configured are built to continue adding new functionality in the future without adding complexity.\nIn general, I like the new visual feel of Microsoft Lists and the style they‚Äôre using for configuring rules, column formatting, etc. I think that every day users will also feel more comfortable exploring the features too.\nI hope that you‚Äôll enjoy Microsoft Lists and rules when they become available. I certainly hope to find out if my frame-by-frame analysis of screenshots, demos, and videos proved to be correct.\nAre rules enabled in your tenant yet? I‚Äôd love to know!\n(Sigh) I really need a hobby!\nFor more information A first look at Microsoft Lists Microsoft Lists ","permalink":"https://hugoabernier.github.io/posts/working-with-rules-in-microsoft-lists/","tags":null,"title":"Working with rules in Microsoft Lists"},{"categories":["Microsoft List"],"contents":"Introduction As Microsoft Lists starts rolling out to Microsoft 365, I find that more and more people seem to get confused about Microsoft Lists vs SharePoint, or complaining about how they‚Äôll have to \u0026ldquo;learn a new product ‚Ä¶ again!\u0026rdquo;.\nTo help alleviate concerns, I thought it would be a great opportunity to introduce you to the upcoming list templates that will be available when it shows up on your tenant.\nI‚Äôm not using a secret preview of Lists or anything like that; I have cobbled the information from public Microsoft materials. As such, the actual details described in this post may change when Lists roll out completely.\nLists Home When it becomes available on your tenant, you‚Äôll find a new Lists icon in your suite bar (a.k.a. \u0026ldquo;The Waffle\u0026rdquo;). This is where you‚Äôll find your recent lists, your favorite lists, and where you‚Äôll be able to create lists easily.\nYou can create a new list by selecting + Create new list at the top of the screen and selecting to create from a Blank list, From Excel, From an Existing List or pick from the existing Templates.\nNote that you‚Äôll also be able to create a list from SharePoint (under Site Content | New | List) and from Microsoft Teams.\nI‚Äôll cover the templates at your disposal (since everything else hasn‚Äôt changed much)\nAs of now, the templates that are available are (may be subject to change):\nIssue Tracker New hire checklist Event itinerary Business trip approvals Team evaluations Asset tracker Project planning Social media calendar Let‚Äôs cover each one in greater details\nIssue Tracker The issue tracker makes it easy to manage issues, track statuses, priorities, and notify your team when things happen.\nYou can imagine adding this list to every project site\nColumns Column\nType\nComments\nTitle\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nIssue description\nMultiple lines of text\nDescribe the issue\nPriority\nChoice\nThe priority of this issue.\nChoices include:\n‚Äì Critical\n‚Äì High\n‚Äì Normal\n‚Äì Low\nStatus\nChoice\nStatus of the issue\nChoices include:\n‚Äì New (Default)\n‚Äì Blocked\n‚Äì In progress\n‚Äì Completed\n‚Äì Duplicate\n‚Äì By design\n‚Äì Won‚Äôt fix\nPerson or group the issue is assigned to\nPerson or Group\nDate reported\nDate and Time\nThe date the issue was reported\nDays old\nCalculated\nNumber of days since date reported\nIssue source\nHyperlink or Picture\nWhere was the issue logged (ticket, customer support call, etc.)\nImages\nThumbnail\nAny photos or images of the issue\nIssue logged by\nPerson or Group\nCreated By\nPerson or Group\nModified By\nPerson or Group\nAssociated files\nAttachments\nAny other files associated with the issue\nViews The issue tracker list includes the following views:\nAll Items Issues grouped by person assigned to Issues grouped by priority Issues grouped by status Employee Onboarding One of those lists that every organization should have, the onboarding list helps you manage new employees as they start on their first day at your company.\nIt looks like this would be a generic list you would show on an Employee orientation site. The same items would appear for every employee, although you could use this list to create new workflow tasks for new employees.\nColumns Column\nType\nComments\nTitle\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nDescription\nMultiple lines of text\nComplete by\nChoice\nThe due date by when work should be completed.\nChoices include:\nBefore joining\nFirst day\nWeek 1\nAfter 30 days\nAfter 60 days\nAfter 90 days\nComplete?\nYes/No\nMark as yes if work is completed\nCompleted On\nDate and Time\nDate on which work was completed\nMentor\nPerson or Group\nPoint of contact to help with the work item\nRelevant link\nHyperlink or Picture\nHelpful link to support the work\nRelevant files\nAttachments\nHelpful files to support the work\nCreated By\nPerson or Group\nModified By\nPerson or Group\nViews All Items Group work by completed by date Group work by completion status Work to be completed\nEvent Itinerary A great way to plan events.\nSo this is how Microsoft plans all these awesome events?!\nColumns Column\nType\nComments\nTitle\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nSession code\nSingle line of text\nSession type\nChoice\nDescribes what kid of a session this is\nChoices include:\n‚Äì Meal\n‚Äì Keynote\n‚Äì Breakout\n‚Äì Workshop\n‚Äì Panel\n‚Äì Talk\n‚Äì Networking\nDescription\nMultiple lines of text\nSpeaker(s)\nPerson or Group\nStart date and time\nDate and Time\nEnd Date and Time\nDate and Time\nDuration\nCalculated\nCapacity\nNumber\nLocation\nChoice\nNotes\nMultiple lines of text\nCreated By\nPerson or Group\nModified By\nPerson or Group\nAttachments\nAttachments\nViews All Items Event itinerary ‚Äì grid view Event itinerary ‚Äì list view Grouped by session type Asset Manager An great way to keep track of all your stuff, and whether they are checked-in and returned (and when).\nNOTE TO SELF: Must create an asset manager list to keep track of all the stuff I lent to my neighbors.\nColumns Column\nType\nComments\nAsset Tag\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nDevice Photo\nThumbnail\nImage of the asset\nStatus\nChoice\nStatus of the asset\nOne of:\n‚Äì Available\n‚Äì Reserved\n‚Äì In use\n‚Äì In repair\n‚Äì Retired\nManufacturer\nChoice\nManufacturer of the asset. Intended to be replaced with your own list of manufacturers.\nModel\nSingle line of text\nModel/make of the device\nAsset type\nChoice\nType of asset:\n‚Äì Smartphone\n‚Äì Laptop\n‚Äì Tablet\n‚Äì Printer\n‚Äì Accessory\nColor\nChoice\nChoice of:\n‚Äì Space gray\n‚Äì White\n‚Äì Black\n‚Äì Silver\n‚Äì Dark blue\n‚Äì Pink\n‚Äì Red\nSerial number\nSingle line of text\nSerial number associated with the asset\nPurchase date\nDate and Time\nWhen the asset was purchased\nPurchase price\nCurrency\nThe purchase price of the asset\nOrder #\nSingle line of text\nOrder or invoice number for the purchase\nCurrent owner\nPerson or Group\nPerson currently using the asset\nPrevious owner\nPerson or Group\nPerson who last used the asset\nDue date\nDate and Time\nWhen the asset will be returned by the current owner\nCondition notes\nMultiple lines of text\nNotes about the current condition of the asset\nCreated By\nPerson or Group\nModified By\nPerson or Group\nAttachments\nAttachments\nViews All Items Grouped By asset type Grouped By manufacturer Purchase information All available assets Asset gallery Recruitment Tracker Keep track of your recruitment pipeline within your company or team and keep track of the candidates, their potential position, hiring process, recruiter, etc.\nSeems to be designed to make it easy to adapt to your own business process. I hope that one day I‚Äôll show up on one of those lists at Microsoft üòâ\nColumn\nType\nComments\nCandidate Name\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nPosition\nChoice\nPosition the candidate is applying for. Contains sample positions that you‚Äôll want to change to suit your needs.\nProgress\nChoice\nWhere the candidate is in the hiring process\nChoice of:\n‚Äì New application\n‚Äì Active\n‚Äì On hold\n‚Äì Top pick\n‚Äì Offer sent\nRecruiter\nPerson or Group\nPerson who will manage candidate scheduling\nApplication date\nDate and Time\nDate the application was submitted\nPhone screen date\nDate and Time\nDate on which candidate will be phone-screened\nPhone screener\nPerson or Group\nPerson who will screen candidate by phone\nInterview date\nDate and Time\nDate of the interview\nInterviewer(s)\nPerson or Group\nPerson or team who will interview the candidate\nNotes\nMultiple lines of text\nNotes about the candidate\nLinkedIn profile\nHyperlink or Picture\nURL pointing to the candidate‚Äôs LinkedIn profile\nCreated By\nPerson or Group\nModified By\nPerson or Group\nResume or CV\nAttachments\nAttach candidate‚Äôs resume or CV here, if available\nViews All Items All Items in Grid Group by role Group by application status All new and active applicants Travel requests This list template doesn‚Äôt have a description. Probably because no one is traveling right now.\nNot only is this list useful for tracking travel requests, but you could also use it to track who‚Äôs currently away (in case of emergencies, etc.)\nColumns Column\nType\nComments\nTrip Title\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nReason for travel\nMultiple lines of text\nProvide a reason for this travel request. (Possible reason: to get there?)\nRequester\nPerson or Group\nPerson who is going on this trip\nDestination\nLocation\nProvide the trip destination\nTravel start date\nDate and Time\nDate when the travel starts\nTravel end date\nDate and Time\nDate when the travel ends\nTravel duration (days)\nCalculated\nAirline\nChoice\nName of the airline you will be flying with\nChoice of:Alaska Air\nSouthwest\nBritish Airways\nEmirates\nJapan Airlines\nEstimated airfare\nCurrency\nEstimated cost of airline tickets\nHotel\nLocation\nWhich hotel will you be staying at\nEstimated hotel cost\nCurrency\nEstimate hotel costs and description (not including the $50 can of peanuts)\nApproved?\nYes/No\nIs this travel request approved\nCreated By\nPerson or Group\nModified By\nPerson or Group\nAttachments\nAttachments\nViews All Items Grouped by approval status Work progress tracker Track priorities and progress as you work towards delivering products and services.\nColumns Column\nType\nComments\nWork item\nSingle line of text\nModified\nDate and Time\nCreated\nDate and Time\nDescription\nMultiple lines of text\nWork to be done\nCategory\nChoice\nType of work\nChoice of:\n‚Äì Planning\n‚Äì Design\n‚Äì Engineering\n‚Äì Marketing\n‚Äì Research\nProgress\nChoice\nChoice of :\n‚Äì Not started\n‚Äì In progress\n‚Äì Completed\n‚Äì Blocked\n‚Äì Behind\nPriority\nChoice\nChoice of:\n‚Äì Critical\n‚Äì High\n‚Äì Medium\n‚Äì Low\nStart date\nDate and Time\nDate on which work was started\nDue date\nDate and Time\nDue date by when work should be completed\nAssigned to\nPerson or Group\nPerson or group the work is assigned to\nNotes\nMultiple lines of text\nAdditional notes\nCreated By\nPerson or Group\nAttachments\nAttachments\nModified By\nPerson or Group\nViews All Items Grouped by approval status Content scheduler Plan, schedule, and manage your content with this template. Filter down to just the items that are due soon, or get notifications when authors check in their drafts.\nImagine using this when creating a blog post series with multiple guest authors, but you could also use this for issuing RFPs, responding to proposals, etc.\nColumns Column\nType\nComments\nContent title\nSingle line of text\nRequired\nModified\nDate and Time\nCreated\nDate and Time\nDescription\nMultiple lines of text\nDescribe the content in a few words\nStatus\nChoice\nChoice of:\n‚Äì Planned\n‚Äì Assigned\n‚Äì Draft needs approval\n‚Äì Ready to publish\n‚Äì Published\nDraft due by\nDate and Time\nDate when the draft is due\nPublish by\nDate and Time\nDate when content should be published\nContent type\nChoice\nType of content being created ‚Äìnot SharePoint content-type\nChoice of:\n‚Äì Help article\n‚Äì Blog post\n‚Äì Video\n‚Äì Social media post\nContent image\nThumbnail\nImage used in the content\nPublished link\nHyperlink or Picture\nLink once the content is published\nAuthor\nPerson or Group\nModified By\nPerson or Group\nContent files\nAttachments\nAdditional files, such as the text and additional images if more than one is used.\nConclusion As you can see, Microsoft Lists are going to be useful, but they‚Äôre also going to be very familiar because they‚Äôre really your good old SharePoint lists, but made available outside of SharePoint.\nI hope this helps?\nFor More Information Visit: https://aka.ms/microsoftlists Updates July 28, 2020: Minutes after posting this blog, people started reporting that Microsoft Lists is showing up on their tenants. Very exciting! ","permalink":"https://hugoabernier.github.io/posts/getting-to-know-microsoft-lists/","tags":null,"title":"Getting to know Microsoft Lists"},{"categories":["SPFx"],"contents":" NOTE: This matrix can now be found in the SharePoint Framework Developer documentation where I hope that the community will continue to help me maintain it.\nIntroduction A while ago, I was looking for an official list of which version of SPFx is compatible with each SharePoint version, but I couldn‚Äôt find what I wanted.\nI kinda forgot about it until today, when someone reached out to me and asked me if I had a SPFX/SharePoint compatibility matrix handy.\nAs I turns out, I had created such a matrix when I wrote my SPFX timeline.\nSo, as I am the world‚Äôs laziest developer, I figured it would be very little effort to put such a matrix together by leveraging work I had already done.\nThe list in this post is not an official list; it is based on my interpretation of the SPFx release notes. If you find an error in it, please let me know and I‚Äôll fix it.\nSPFx Version Compatibility SharePoint Version Supported SPFx version Notes SharePoint Online All versions SharePoint Server 2019 v1.4.1 or lower SharePoint Server 2016 v1.1 Requires Feature Pack 2 SPFx Development Environment Compatibility PRO TIP: If you need to download a previous of Node.js, use the previous releases page from their download section. You can also use links in the table below to download the vversions of Node.js directly.\nSPFx Node.js NPM TypeScript React 1.15 v12, v14, v16 v5, v6, v7, v8 v4.5 v16.13.1 1.14 v14.x, v12.x v5, v6 v3.9 v16.13.1 1.13.1 v14.x, v12.x v5, v6 v3.9 v16.13.1 1.13.0 v14.x, v12.x v5, v6 v3.9 v16.13.1 1.12.1 v14.x, v12.x, v10.x v5, v6 v3.7 v16.9.0 1.12.0 v12.x, v10.x v5, v6 v3.7 v16.9.0 1.11.0 v10.x v5, v6 v3.3 v16.8.5 1.10.0 v10.x, v8.x v5, v6 v3.3 v16.8.5 1.9.1 v10.x, v8.x v5, v6 v2.9 v16.8.5 1.8.2 v8.x, v10.x v5, v6 v2.9 v16.7.0 1.8.1 v8.x v5, v6 v2.7, v2.9, v3.x v16.7.0 1.8.0 v8.x v5, v6 v2.7, v2.9, v3.x v16.7.0 1.7.1 v8.x v5, v6 v2.4 v16.3.2 1.7.0 v8.x v5, v6 v2.4 v16.3.2 1.6.0 v6.x, v8.x v3 (w/ Node.js 6.x), v5 (w/ Node.js 8.x) v2.4 15 1.5.1 v6.x, v8.x v3 (w/ Node.js 6.x), v5 (w/ Node.js 8.x) v2.4 v15 1.5.0 v6.x, v8.x v3 (w/ Node.js 6.x), v5 (w/ Node.js 8.x) v2.4 v15 1.4.1 v6.x, v8.x v3, v4 v2.4 v15 1.4.0 v6.x v3, v4 v2.4 v15 1.3.0 v6.x v3, v4 v2.4 v15 1.1.0 v6.x v3, v4 v2.4 v15 1.0.0 v6.x v3 v2.4 v15 Conclusion If I made any mistakes in the list above, please do not hesitate to write in the comments. I‚Äôll gladly update my matrix.\nI still think that there should be an official compatibility list something in the SharePoint Documentation.\nMaybe I should just submit a PR to the SP Dev Docs repo and hope the community will help me keep my compatibility matrix accurate?\nThanks Thanks to David Warner II for the inspiration for this post and for helping fix my mistakes While doing my research for this post, I found Andrew Connell has also written a handy article. Updates June 27, 2022: SPFx 1.15 and updated my blog. Feb 19th, 2022: SPFx 1.14 is here! June 25, 2021: Totally forgot about SPFx 1.12.1 March 15, 2021: Added SPFx 1.12 October 5, 2020: Added links to download versions of Node.js directly. September 11, 2020: Thanks to Don Kirkham for suggesting that we add the link to Node.js previous versions page. March 20, 2020: Moved this article to the SharePoint Framework Developer documentation where I hope that the community will continue to help me maintain it. January 12, 2020: I love it when people take the time to write in comments to help me keep content up-to-date! Thank you Ronald Borman for the many corrections to my matrix. Keep ‚Äôem coming! January 2, 2020: Thanks to David Warner II for pointing out that Andrew Connell has an awesome article on how to use NVM as a better Node package manager. It is a great solution if you need to run multiple versions of Node.js on the same environment. ","permalink":"https://hugoabernier.github.io/posts/spfx-compatibility-matrix/","tags":["React","SPFx"],"title":"SPFx Compatibility Matrix"},{"categories":["SPFx"],"contents":"Introduction Scott Hanselman is someone that I admire, both as a Developer and as a Human Being. I never miss a chance to attend his presentations. I‚Äôm not smart enough to understand everything he talks about all the time, but he‚Äôs always entertaining to watch.\nEveryone once in a while, he creates an ultimate list of developer and power tools which always has one or two new tools I didn‚Äôt know about. Any serious developer should look at his list as a great starting point to configure their workstation.\nWhen SPFx first came out, I had never touched Node.js, React, or TypeScript. Visual Studio Code was (in my mind) just a free/lightweight version of Visual Studio ‚Äî why would anyone use VS Code over the full-on Visual Studio?!\nAnd don‚Äôt get me started about GitHub!\nI had a steep learning curve ahead of me. And I had a whole new set of development tools to install on my workstation. It took me a while to figure out what I needed to install to be efficient at creating SPFx solution.\nI‚Äôm in the process of updating my Windows 10 workstation and, as I was writing down the list of things to re-install, I thought I‚Äôd share my list. This list is specifically for people who want to write SPFx solutions on Windows. It isn‚Äôt as comprehensive as Scott‚Äôs list, but I hope that it will help anyone getting started with SPFx development.\nI also work with .NET, Azure, VR and AR, and Dynamics 365, so I have other tools on my workstation, but I wanted to focus on SPFx development.\nIf you develop SPFx solutions and see that I forgot anything here, I would love to hear from you!\nNOTE: I‚Äôm a bit of a minimalist when it comes to installing stuff on my workstation. I hate installing things that will automatically start when I launch windows (that‚Äôs why I never install anything from Adobe anymore). You‚Äôll rarely find anything in this article that will completely change how your operating system works or takes over your machine‚Ä¶ and if you do, it is because I feel that the trade-off is worth it.\nMandatory Node.JS Find the .MSI file in the list that suits your workstation (x86 or x64). As tempting as it may be to download the latest version, don‚Äôt. The only version that is officially supported for SPFx development is 10.x.\nGulp Gulp is a tool that helps automate building your solutions. Once NodeJS is installed, install Gulp by launching the Node.js command prompt and type the following:\nnpm install -g gulp Yeoman Yeoman is a tool that scaffolds solutions. Think of it as the Visual Studio new project wizard, if the new project wizard was command-line driven, open-sourced, and contained a bazillion project types. To install it, use your Node.js command prompt and type:\nnpm install -g yo SharePoint Framework Yeoman Generator Now that Yeoman is installed, you need to add what is essentially your \u0026ldquo;SPFx Project Wizard\u0026rdquo;. To do so, use your Node.js command prompt and type:\nnpm install -g @microsoft/generator-sharepoint Recommended Visual Studio Code When I first started writing SPFx solutions, I refused to use Visual Studio Code (real developers use Visual Studio, right?). Unfortunately, Visual Studio messed up my SPFx solutions more than once and I quickly learned to appreciate Visual Studio Code. Visual Studio no longer messes with your SPFx solutions, but I still use VS Code for all-things-SharePoint.\nGit for Windows Even if your company uses Azure DevOps or TFS for source control, you should install Git to make your life easier when downloading SPFx code samples.\nCmder for Windows If you‚Äôve ever wondered what that cool command-line they use on the SharePoint Development Community calls, you have found it! Follow my instructions if you need help installing it. Fira Code Font This font will add the cool visualization to the Cmder command prompt. You should also configure it as your default Visual Studio Code font Cmder Powerline When paired with the Fira Code font (above), it will add that cool command-prompt to Cmder.\nPostman Test your APIs using this awesome tool. It can even intercept calls and replay them. I use this tool all the time when I‚Äôm trying to understand how SharePoint does something.\nFiddler Use Fiddler to capture your workstation‚Äôs network traffic and diagnose issues. For example, if you want to know how the Microsoft Teams app retrieves your list of groups, use Fiddler to capture what calls it makes.\nCLI for Microsoft 365 CLI A command-line interface that lets you do tons of stuff in Microsoft 365 and SPFx solutions. To install, use your Node.js command prompt and type the following:\nnpm i -g @pnp/cli-microsoft365 PnP PowerShell An awesome library of PowerShell commands that allows you to perform complex provisioning and artifact management actions towards SharePoint. Uses a combination of CSOM and REST behind the scenes, and works against both SharePoint Online as SharePoint On-Premises.\nSharePoint Online Management Shell Use it to create SharePoint Online sites and add users, you can quickly and repeatedly perform tasks much faster than you can in the Office 356 admin center. You can also perform tasks that are not possible to perform in the Office 356 admin center.\nPnP Yeoman Generator If you find yourself always adding the PnP developer controls, PnP Property Controls, PnPJs, unit testing, etc. to your SPFx solutions, you should probably try the PnP Yeoman Generator. It is built on top of the SPFx Yeoman generator, so you‚Äôre not missing out on anything the SPFx generator will give you, but it automatically adds many other useful features ‚Äî like unit testing, code linting, bundle optimization. To install it, use your Node.js command prompt and type:\nnpm install -g @pnp/generator-spfx Visual Studio Code Extensions GitHub Pull Requests Allows you to review and manage GitHub pull requests in Visual Studio Code. Paste JSON as Code Convert JSON object to typescript interfaces as you paste into Visual Studio Code. What, you thought I typed all those classes? Rencore Deploy SPFx Package Easily deploy a SharePoint Framework solution package to SharePoint Online directly from Visual Studio Code.\nRencore SPFx Script Check Using the Rencore Script Check Visual Studio Code extension you can easily reference external libraries in SharePoint Framework projects the right way. Additionally, you can ensure, that the CDN they are using is well performing.\nRencore Tenant-Wide SPFx Extension Deployment Easily add tenant-wide deployment information for your SPFx extension directly from Visual Studio Code.\nSPFx Debug Configuration This Visual Studio Code extension can be used to add the required configuration for debugging your SharePoint Framework.\nSPFx Essentials This is an extension pack that contains useful extension for SharePoint Framework projects. Most of the extensions I listed here are already included in Elio‚Äôs awesome list.\nSPFx Localization This extension for Visual Studio Code makes it easier to work with locale resource files in SharePoint Framework projects. The extension has the ability to export all locale labels to a CSV file to make translations easier to process. With this extension, you have absolutely no excuse to hard-code your text in English within your solutions. SPFx Snippet I never realized how much I use this extension until I tried to write spfx-rcc for a web part on a machine that didn‚Äôt have the extension installed. Take it from the World‚Äôs Laziest Developer, you need this extension. SPFx Task Runner This extension allows you to easily run SharePoint Framework tasks with a couple of mouse clicks. At the moment you can for example list all the available gulp tasks in your project, start the local development server and create debug or release solution packages or pick a task to run from the list of available tasks. SP Formatter Sergei strikes again with a great extension that works with the SP Formatter browser extension to make it easy to use syntax highlighting on list formatting.\nSharePoint Typed Item Sergei‚Äôs awesome extension generates interfaces based on list and content type fields. Also check out Sergei‚Äôs SPFx Rest Client Prettier ‚Äî Code Formatter This extension format your JavaScript / TypeScript / CSS using Prettier.\nSPGo for Visual Studio Code SPGo allows you to develop SharePoint web solutions from your local PC using Visual Studio Code. It pulls down remote folders from SharePoint to your local workspace and automatically publishes files when you save. It is one of those \u0026ldquo;where has this been all my (SharePoint) life?!\u0026rdquo; extensions.\nDocs Authoring Pack If you maintain any kind of Markdown documentation, or if you contribute to Microsoft Docs (you should!), you should install this extension pack that will make your life much easier. Thanks to Paul Bullock for pointing this one out.\nCodeTour CodeTour is an awesome Visual Studio Code extension, which allows you to record and playback guided code walkthroughs. I‚Äôve been using it to add tours to all my new web part projects and adding new tours to my old SPFx samples in the Samples repo. Nice to have Zoomit Be a considerate presenter! If you do presentations and show your code, you should consider installing this tool. Those people in the back of the room (who sat in the back so that they can exit quickly if they find you boring) may not exit so fast if they can actually see what you‚Äôre doing.\nPaint.NET A great image editing tool that‚Äôs fully featured and free. I use it to edit icons and other assets.\nInkscape A powerful SVG editing tool. I use it to create SVG icons. If only I could get SVG icons to work consistently in SPFx, it‚Äôd be great.\nSnagIt Probably the golden standard for screen capture tools. I stubbornly used the Windows Snipping Tool for the longest time until I reluctantly installed SnagIt and I don‚Äôt think I‚Äôll use anything but SnagIt from now on. If you write any kind of documentation, help guides, or blogs, this is a must.\nCamtasia Like SnagIt, I used to avoid it because I was too cheap to pay for the license‚Ä¶ but if you do any kind of video editing, give this one a try. It is fantastic. (Why do I have to be so stubborn?!)\nScreenToGif Do everyone a favor and show an animated GIF of what your SPFx solutions can do in the README.MD file. It saves them having to install your solution to see what it does. This tool is a screen, webcam and sketchboard recorder with an integrated editor that makes it super-easy to create animated GIFs. Available as a Microsoft Store App or a WPF install. Browser Extensions Note that these extensions can be used in Chrome or in Edge Chromium. (I use Edge Chromium, personally).\nSP Editor A Google Chrome Extension for creating and updating files (js, css), injecting files to sites, modifying web/list property bag values (add, edit, remove, index) and creating webhook subscriptions, edit/add/remove web parts from publishing pages and run sp-pnp-js typescript snippets in SP2013, SP2016 and SharePoint Online from Chrome Developer Tools. This tool will help you create amazing SharePoint applications fast from your browser from any computer which runs Chrome!\nReact Developer Tools Allows you to inspect the React component hierarchies in the Chrome Developer Tools. You get a new tab called React in your Chrome DevTools which shows you the root React components that were rendered on the page, as well as the subcomponents that they ended up rendering. It is great when trying to understand how the SharePoint team built a component.\nScreen Reader for Google Chrome Test your web parts for accessibility by giving you the same experience your users will get when they use a screen reader.\nAXE No, not the body spray. Use this tool to check for accessibility for WCAG 2.0 and Section 508 accessibility. If you aren‚Äôt testing for accessibility, you‚Äôre possibly making it difficult for 10 to 20% of your users.\nRefined GitHub If you use GitHub regularly, but get a little annoyed with some missing features, this extension is for you. It adds tons of cool features including my favorites: remove changes to individual files in a commit/pull request and download a folder. SP Formatter Not so much a developer-focused extension, but a very useful one nevertheless. SP Formatter adds JSON syntax highlighting, live preview, and autocompletion to SharePoint list formatting. Websites PnP Home Can‚Äôt keep up with all the new things that the Microsoft 365 PnP community members are doing? You can find everything in one convenient place. SharePoint Look Book Get inspired with cool looking SharePoint sites. SharePoint Design Guidance Learn how to create great looking SharePoint solutions. Fluent UI See what components are at your disposal when building awesome Microsoft 365 solutions.\nPnP/PnPJS PnPjs is a collection of fluent libraries for consuming SharePoint, Graph, and Microsoft 365 REST APIs in a type-safe way. You can use it within SharePoint Framework, Nodejs, or any JavaScript project. This an open source initiative and we encourage contributions and constructive feedback from the community.\nReusable property pane controls for the SharePoint Framework solutions This repository provides developers with a set of reusable property pane controls that can be used in their SharePoint Framework (SPFx) solutions. Reusable React controls for your SharePoint Framework solutions Provides developers with a set of reusable React controls that can be used in SharePoint Framework (SPFx) solutions. The project provides controls for building web parts and extensions. You should really try the ChartControl üôÇ Microsoft 365 \u0026amp; SharePoint Community ‚Äì PnP (YouTube) YouTube channel with SharePoint Dev Weekly videos, SharePoint Framework Tutorials and Training videos, SharePoint Framework and Extensions Tutorials, Getting Started videos, PnP Webcasts, etc. If you no like read, you watch these good.\nBase64 Image Encoder Use this site to encode your web part icons to base 64. You can also use my interactive post to do all the work for you. EzGif.com If you don‚Äôt want to install ScreenToGif but want to create animated GIFs to help people see what your web part will look like without having to install it, I recommend using this web site. Create a video of your web part in action, then use EZ GIF‚Äôs Video to animated GIF converter to create your GIF. Add the GIF to your README.MD file and people will see how cool your web part really is! GitHub Repos Microsoft Fluent UI When I want to learn how to create awesome React components, I take my inspiration from Microsoft Fluent UI.\nSP Dev FX WebParts Almost every SPFx project I create starts from one of the many samples available on this awesome repo.\nPnP Property Controls Back when most of us were still learning React and SPFx, they were already creating re-usable controls for SPFx. Take some time to read their code for inspiration.\nPnP Developer Controls From the brilliant minds that brought you the PnP Property Controls. Read the code to learn tons!\nSharePoint Starter Kit Look at some of the best solutions used to build the perfect demo environments.\nConclusion This article listed the various tools I use when building SPFx solutions on a Windows 10 workstation. As I stated previously, I‚Äôm kind of a minimalist when it comes to installing stuff on my machine. I‚Äôm sure that there are many other tools that I should install, but I haven‚Äôt found a need for it yet. What other tools do you install on your workstation? Let me know in the comments.\nUpdate Feb 4, 2021: Added SP Formatter VS Code Extension. Mind.blown. September 7, 2020: Added Enhanced GitHub. July 9, 2020: Refreshed links and added CodeTour, SP Formatter and the PnP Landing Page. April 27, 2020: Added Docs Authoring Pack. December 06, 2019: Updated version of Node.js to 10.x. October 10, 2019: I added SPGo after attending Beau Cameron and David Warner II‚Äòs great SharePoint Saturday New England session about SPFx Development Tips from the trenches. Watching those two present together reminded me that there is always room to learn more. July 2, 2019: Thanks to Denis Molodtsov for suggesting ScreenToGif instead of using EzGif. It makes it so much easier to capture an animated GIF of your web part in action! April 4, 2019: Added SharePoint Developer Community ‚Äì PnP YouTube channel March 28, 2019: Added [Sergei Sergeev‚Äôs] cool SPFx Typed Item extension, which he demoed in the March 28th SharePoint Dev Ecosystem call. Watch out for those Kung-fu Gophers. March 25, 2019: Thanks to Thomas Lamb for suggesting Prettier ‚Äî Code Formatter. March 20, 2019: Thanks to Sam Culver for pointing out that Fira Code makes a great font in Visual Studio. March 16, 2019: Added Paint.NET and Inkscape as graphical tools. March 14, 2019: Thanks to Miguel Isidoro for pointing out that I had the wrong link to the Rencore SPFx Script Check. Credits Header image by Rudy and Peter Skitterians from Pixabay\n","permalink":"https://hugoabernier.github.io/posts/ultimate-developer-tool-list-for-spfx/","tags":["React","SPFx"],"title":"Ultimate Developer Tool List for SPFx"}]